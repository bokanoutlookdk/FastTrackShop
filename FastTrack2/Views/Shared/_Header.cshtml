@inherits Merchello.Web.Mvc.MerchelloTemplatePage 
@using Merchello.Core.Models
@using Merchello.FastTrack.Ui
@using Merchello.Web
@{
    var storeRoot = ExampleUiHelper.Content.GetStoreRoot();
    var catalogRoot = storeRoot.FirstChild(x => x.DocumentTypeAlias == "ftCatalog" && x.IsVisible());
    var basketPage = ExampleUiHelper.Content.GetBasket();
    var accountPage = ExampleUiHelper.Content.GetAccount();
    var aboutPage = storeRoot.FirstChild(x => x.DocumentTypeAlias == "ftAbout" && x.IsVisible());
}
<div class="navbar navbar-inverse">
    <div class="container">

        <a class="navbar-brand navbar-right mui-store-name" href="@storeRoot.Url">@Umbraco.Field("storeName", recursive: true)</a>

        <div class="navbar-header">
            <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
        </div>



        <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
            <ul class="nav navbar-nav">
                <li@(IsActive(storeRoot.Id))><a href="@Url.Content("~/")">Home</a></li>

                @if (catalogRoot != null)
                {
                    <li@(IsActive(catalogRoot.Id))>
                        <a href="@catalogRoot.Url">@catalogRoot.Name</a>
                    </li>
                }

            </ul>

            <ul class="nav navbar-nav navbar-right mui-nav-right">
                <li@(IsActive(basketPage.Id))>
                    <a href="@basketPage.Url"><span class="glyphicon glyphicon-shopping-cart" aria-hidden="true"></span> @basketPage.Name (<span data-muilabel="basketcount">@CurrentCustomer.Basket().TotalQuantityCount</span>)</a>
                </li>

                <li@(IsActive(accountPage.Id, !CurrentCustomer.IsAnonymous))>
                    <a href="@accountPage.Url">
                        <span class="glyphicon glyphicon-user" aria-hidden="true"></span>
                        @if (CurrentCustomer.IsAnonymous)
                        {
                            <span>Login</span>
                        }
                        else
                        {
                            var customer = (ICustomer)CurrentCustomer;
                            <span>@customer.FirstName @customer.LastName</span>
                        }
                    </a>
                </li>
                <span>@aboutPage.DocumentTypeAlias###</span>
                @if (!CurrentCustomer.IsAnonymous)
                {
                    <li class="dropdown">
                        <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false"><span class="caret"></span></a>
                        <ul class="dropdown-menu">
                            <li><a href="@ExampleUiHelper.Content.GetChangePassword().Url">Change Password</a></li> @* this should be softcoded via ExampleUIHelper *@
                            <li>@Html.ActionLink("Logout", "Logout", "CustomerMembership", new { area = "FastTrack", redirectId = Model.Content.Id }, null)</li>
                        </ul>
                    </li>
                }
                <li @(!CurrentCustomer.Basket().Items.Any() ? MvcHtmlString.Create("class=\"mui-quickcheckout\"") : MvcHtmlString.Empty) data-value="quickcheckout"><a href="@ExampleUiHelper.Content.GetCheckout().Url" class="success">Quick Checkout</a></li>
            </ul>

        </div>
    </div>
</div>

<div style="border: solid red 2px;">
    <nav class="fh5co-nav" role="navigation">
        <div class="container">
            <div class="row">
                <div class="col-md-3 col-xs-2">
                    <div id="fh5co-logo"><a href="index.html">Shop.</a></div>
                </div>
                <div class="col-md-6 col-xs-6 text-center menu-1">
                    <ul>
                        <li class="has-dropdown">
                            <a href="product.html">Shop</a>
                            <ul class="dropdown">
                                <li><a href="single.html">Single Shop</a></li>
                            </ul>
                        </li>
                        <li><a href="@aboutPage.Url">About</a></li>
                        <li class="has-dropdown">
                            <a href="services.html">Services</a>
                            <ul class="dropdown">
                                <li><a href="#">Web Design</a></li>
                                <li><a href="#">eCommerce</a></li>
                                <li><a href="#">Branding</a></li>
                                <li><a href="#">API</a></li>
                            </ul>
                        </li>
                        <li><a href="contact.html">Contact</a></li>
                    </ul>
                </div>
                <div class="col-md-3 col-xs-4 text-right hidden-xs menu-2">
                    <ul>
                        <li class="search">
                            <div class="input-group">
                                <input type="text" placeholder="Search..">
                                <span class="input-group-btn">
                                    <button class="btn btn-primary" type="button"><i class="icon-search"></i></button>
                                </span>
                            </div>
                        </li>
                        <li class="shopping-cart"><a href="#" class="cart"><span><small>0</small><i class="icon-shopping-cart"></i></span></a></li>
                    </ul>
                </div>
            </div>

        </div>
    </nav>
</div>

@functions
{
    private IHtmlString IsActive(int contentId, bool isDropdown = false)
    {
        var css = isDropdown ? "dropdown" : string.Empty;
        if (Model.Content.Id == contentId)
        {
            css += " active";
        }
        css = css.Trim();

        return !css.IsNullOrWhiteSpace() ? MvcHtmlString.Create(string.Format(" class=\"{0}\"", css)) : MvcHtmlString.Empty;
    }
};